events {
    worker_connections 512;
}

http {
    # docker net default resolver addr
    resolver 127.0.0.11 ipv6=off valid=30s;

    server {
        listen 443 ssl;

        http2 on;

        ssl_certificate     tls/cert.pem;
        ssl_certificate_key tls/key.pem;

        set $videoapi_endpont videoapi:8181;

        location /videoapi.usersideapi {
            grpc_intercept_errors off;
            grpc_pass grpc://$videoapi_endpont;
        }
        location / {
            return 404;
        }
    }

    server {
        listen 80;
        server_name localhost;

        # this makes nginx resolve endpoint at runtime
        set $userapi_endpont userapi:8080;
        set $videoapi_endpont videoapi:8080;
        set $uploader_endpont uploader:8080;
        set $streamer_endpont streamer:8080;

        # userapi location
        location /api/users {
            proxy_pass http://$userapi_endpont;
            break;
        }

        # videoapi location
        location /api/video {
            proxy_pass http://$videoapi_endpont;
            break;
        }
        location /api/watch {
            proxy_pass http://$videoapi_endpont;
            break;
        }
        location /api/quota {
            proxy_pass http://$videoapi_endpont;
            break;
        }

        # uploader location
        location /upload {
            client_max_body_size 500M;
            proxy_pass http://$uploader_endpont;
            break;
        }

        # streamer location
        location /watch {
            proxy_pass http://$streamer_endpont;
            break;
        }

        # www static files
        location / {
            include mime.types;
            root /var/www/player;
            try_files $uri /index.html =404;
        }

        # vidi static config
        location = /config.json {
            include mime.types;
            root /var/www/config;
            try_files $uri =404;
        }
    }
}
